version: ""

formatter: markdown table

name: terraform-account-starter

content: |-
  # Terraform Account Starter

  GitHub: [StratusGrid/terraform-account-starter](https://github.com/StratusGrid/terraform-account-starter)

  This is to showcase the use of many of the StratusGrid modules working together using terraform version 0.12.

  It will initiate a fully configured AWS account with config and logging set up in all 4 US regions, with terraform state and cloudtrail in us-east-1

  ## Recommended first steps if using this as the account code

  - Enable IAM Billing access while logged in as root under My Account
  - Delete the default VPCs in all regions you will be using (at least all regions with config rules...)
  - Tag the default RDS DB Security Groups in all regions with your required tags (cli to do so is below)

  ```bash
  aws rds add-tags-to-resource --resource-name "arn:aws:rds:us-east-1:<account_number>:secgrp:default" --tags "[{\"Key\": \"Environment\",\"Value\": \"<env>\"},{\"Key\": \"Customer\",\"Value\": \"Shared\"}]" --region us-east-1

  aws rds add-tags-to-resource --resource-name "arn:aws:rds:us-east-2:<account_number>:secgrp:default" --tags "[{\"Key\": \"Environment\",\"Value\": \"<env>\"},{\"Key\": \"Customer\",\"Value\": \"Shared\"}]" --region us-east-2

  aws rds add-tags-to-resource --resource-name "arn:aws:rds:us-west-1:<account_number>:secgrp:default" --tags "[{\"Key\": \"Environment\",\"Value\": \"<env>\"},{\"Key\": \"Customer\",\"Value\": \"Shared\"}]" --region us-west-1

  aws rds add-tags-to-resource --resource-name "arn:aws:rds:us-west-2:<account_number>:secgrp:default" --tags "[{\"Key\": \"Environment\",\"Value\": \"<env>\"},{\"Key\": \"Customer\",\"Value\": \"Shared\"}]" --region us-west-2
  ```

  - Enable updated account features for ECS
  ```bash
  aws ecs put-account-setting-default --name serviceLongArnFormat --value enabled --region us-east-1
  aws ecs put-account-setting-default --name taskLongArnFormat --value enabled --region us-east-1
  aws ecs put-account-setting-default --name containerInstanceLongArnFormat --value enabled --region us-east-1
  aws ecs put-account-setting-default --name awsvpcTrunking --value enabled --region us-east-1
  aws ecs put-account-setting-default --name containerInsights --value enabled --region us-east-1
  ```

  ## StratusGrid Standards we assume

  - All resource names and name tags shall use `_` and not `-`s
  - StratusGrid mostly follows the file names outlined [here](https://www.terraform-best-practices.com/code-structure), we use a `providers.tf` file for provider specific information.
  - StratusGrid mainly uses the AWS provider, and this provider supports provider level tagging. We use that whenever possible, some resources don't explicitly support it so tags need to be checked.
  - The old naming standard for common files such as inputs, outputs, providers, etc was to prefix them with a `-`, this is no longer true as it's not POSIX compliant. Our pre-commit hooks will fail with this old standard.
  - StratusGrid generally follows the TerraForm standards outlined [here](https://www.terraform-best-practices.com/naming)

  ## Repo Knowledge

  This repo has several base requirements
  - This repo is based upon the AWS `~> 4.9.0` provider
  - The following packages are installed via brew: `tflint`, `terrascan`, `terraform-docs`, `gitleaks`, `tfsec`, `pre-commit', 'sops`, `coreutils`
  - This assumes SOPs v3.7.2
  - Install `bash` through Brew for Bash 5.0, otherwise it will fail with the error that looks like `declare: -g: invalid option`
  - If you need more tflint plugins, please edit the `.tflint.hcl` file with the instructions from [here](https://github.com/terraform-linters/tflint)
  - It's highly recommend that you follow the Git Pre-Commit Instructions below, these will run in GitHub though they should be ran locally to reduce issues
  - By default Terraform docs will always run so our auto generated docs are always up to date
  - This repo has been tested with [awsume](https://stratusgrid.atlassian.net/wiki/spaces/TK/pages/1564966913/Awsume)

  ### SOPs and Terraform

  See the [README_SOPs.md](README_SOPs.md) for how to use and configure SOPs.

  ### TFSec

  See the pre-commit tfsec documentation [here](https://github.com/antonbabenko/pre-commit-terraform#terraform_tfsec), this includes on how to bypass warnings

  ### Terrascan

  Terrascan can't do comment based rule skips for modules, so they must be specific in the `.config/terrascan.yaml` file otherwise it will always fail.
  Several config options have to be specified in the `.pre-commit-config.yaml` as they can't be specified in the terrascan config file due to a lack of support.

  ### Terraform validate
  
  Terraform Validate can't be used in the Git Pre-Commit hooks as several resources are generated at run time

  ### Template Documentation
  
  A sample template Git Repo with how we should setup client infrastructure, in this case it's the StratusGrid Account Starter Template.
  More details are available [here](https://stratusgrid.atlassian.net/wiki/spaces/MS/pages/2065694728/MSP+Client+Setup+-+Procedure) in confluence.

  ## Documentation

  This repo is self documenting via Terraform Docs, please see the note at the bottom.

  The way that this repo is structured is supposed to be an infrastructure starter, as well as a base psuedo code repo.
  Each file is generally self contained except where it can't be. All variables are in `variables.tf`, all data is in `data.tf`, and etc.

  ### `billing-alerts.tf`
  
  ### `data.tf`
  This data file contains all references for data providers, these are fairly generic.

  ### `LICENSE`
  This is the standard Apache 2.0 License as defined [here](https://stratusgrid.atlassian.net/wiki/spaces/TK/pages/2121728017/StratusGrid+Terraform+Module+Requirements).

  ### `locals.tf`
  All local values that aren't file specific.

  ### `outputs.tf`
  The StratusGrid standard for Terraform Outputs.

  ### `provider.tf`
  This file contains the necessary provider(s) and there configurations.

  ### `README.md`
  It's` this file! I'm always updated via TF Docs!

  ### `state.tfnot`
  The StratusGrid standard for Terraform remote state management.
  Rename this file to `state.tf` once you're ready to migrate to the remote state.

  ### `tags.tf`
  The StratusGrid standard for provider/module level tagging.

  ### `variables.tf`
  All variables related to this repo for all facets.
  One day this should be broken up into each file, maybe maybe not.

  ### `versions.tf`
  This file contains the required Terraform versions, as well as the required providers and their versions.

  ## Documentation of Misc Config Files

  This section is supposed to outline what the misc configuration files do and what is there purpose

  ### `.config/.terraform-docs.yml`
  This file auto generates your `README.md` file.

  ### `.config/terrascan.yaml`
  This file has all of the configuration options required for Terrascan, this is where you would skip rules to.

  ### `.github/sync-repo-settings.yaml`
  This file is our standard for how GitHub branch protection rules should be setup.

  ### `.github/workflows/pre-commit.yml`
  This file contains the instructions for Github workflows, in specific this file run pre-commit and will allow the PR to pass or fail. This is a safety check and extras for if pre-commit isn't run locally.

  ### `.vscode/settings.json`
  This file is a vscode workspace settings file.

  ### `.gitignore`
  This is your gitignore, and contains a slew of default standards.

  ### `.pre-commit-config.yaml`
  This file is the GIT pre-commit file and contains all of it's configuration options

  ### `.prettierignore`
  This file is the ignore file for the prettier pre-commit actions. Specific files like our SOPS config files have to be ignored.

  ### `.terraform.lock.hcl`
  This file contains the hashes of the Terraform providers and modules we're using.

  ### `.tflint.hcl`
  This file contains the plugin data for TFLint to run.

  ---

  {{ .Requirements }}

  {{ .Resources }}

  {{ .Inputs }}

  {{ .Outputs }}

  ---
  ## Assumptions we make

  * We assume a basic knowledge of terraform
  * We assume StratusGrid written and unwritten (Listen I know, if you find an unwritten standard please standardize and it document it) standards
  * We assume you know how to switch TF states to new envs
  * We assume that if you find something wrong or have an improvement you will submit a PR and run terraform-docs
  * **Of all most importance, we assume that you read this or at least skimmed this README file**

  ## Just a note

  ### First Run

  When doing a first run update the init-tfvars tfvars file for the relevant values produced via the account starter.
  After the initial and the terraform state file is created. Rename `state.tfnot` to `state.tf` and run `rm -rf .terraform`. Then rerun the terraform init to migrate the state file to S3.

  This is purely an example repo and it's subject to change for each and every client, please use your best judgement. While adhering to StratusGrids' Standards.

  ## Apply this template via Terraform

  ### Before this is applied, you need to configure the git hook on your local machine
  ```bash
  #Verify you have bash5
  brew install bash

  # Test your pre-commit hooks - This will force them to run on all files
  pre-commit run --all-files

  # Add your pre-commit hooks forever
  pre-commit install
  ```

  ### Dev
  ```bash
  terraform init -backend-config=./init-tfvars/dev.tfvars 
  terraform apply -var-file ./apply-tfvars/dev.tfvars
  ```

  ### Stg
  ```bash
  terraform init -backend-config=./init-tfvars/stg.tfvars 
  terraform apply -var-file ./apply-tfvars/stg.tfvars
  ```

  ### Prd
  ```bash
  terraform init -backend-config=./init-tfvars/prd.tfvars 
  terraform apply -var-file ./apply-tfvars/prd.tfvars
  ```
  Note: Before reading, uncomment the code for the environment that you
  wish to apply the code to. This goes for both the init-tfvars and apply-tfvars
  folders.

  ## Contributors
  - Chris Hurst [StratusChris](https://github.com/StratusChris)
  - Ivan Casco [SGTyler](https://github.com/ivan.casco-sg)
  - Tyler Martin [SGTyler](https://github.com/SGTyler)
  - Wesley Kirkland [wesleykirklandsg](https://github.com/wesleykirklandsg)

  Note, manual changes to the README will be overwritten when the documentation is updated. To update the documentation, run `terraform-docs -c .config/.terraform-docs.yml .`

sections:
  show:
    - requirements
    - resources
    - inputs
    - outputs

sort:
  enabled: true
  by: name

output:
  file: README.md
  mode: replace
